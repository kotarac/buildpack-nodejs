#!/usr/bin/env bash
set -e

BUILD_DIR=`pwd`/.buildpack-nodejs
mkdir -p $BUILD_DIR
export PATH=$BUILD_DIR/node/bin:$PATH

log() {
  echo "  â—‹ $@"
}

abort() {
  echo
  echo "  $@" 1>&2
  echo
  exit 1
}

if [ ! -f "package.json" ]; then
  abort "package.json not found"
fi

req_node_version=$(buildpack-nodejs-json -s -b < package.json | egrep '\["engines","node"]' | awk '{print $2}' | tr -d \")
if [ -z $req_node_version ]; then
  abort "node version not specified"
fi

node_version=$(curl -s --retry 5 --retry-max-time 15 https://semver.io/node/resolve/$req_node_version)
if [ -z $node_version ]; then
  abort "can't resolve reqd node version"
fi
log "resolved node $req_node_version -> $node_version"

req_npm_version=$(buildpack-nodejs-json -s -b < package.json | egrep '\["engines","npm"]' | awk '{print $2}' | tr -d \")
if [ -z $req_npm_version ]; then
  abort "npm version not specified"
fi

npm_version=$(curl -s --retry 5 --retry-max-time 15 https://semver.io/npm/resolve/$req_npm_version)
if [ -z $npm_version ]; then
  abort "can't resolve reqd npm version"
fi
log "resolved npm $req_npm_version -> $npm_version"

code=$(curl -SsL --retry 5 --retry-max-time 15 "https://nodejs.org/dist/v$node_version/node-v$node_version-linux-x64.tar.xz" -o /tmp/node.tar.xz --write-out "%{http_code}")
if [ "$code" != "200" ]; then
  abort "can't download node"
fi

tar xf /tmp/node.tar.xz -C $BUILD_DIR
rm -rf $BUILD_DIR/node
mv $BUILD_DIR/node-v$node_version-linux-x64 $BUILD_DIR/node
log "installed node"

npm -s -g i npm@$npm_version &> /dev/null
log "installed npm"

npm -s i
log "installed deps"
